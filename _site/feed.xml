<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cree</title>
    <description>A blogging journey into code, Math, and ThinkPads.</description>
    <link>http://mattcree.github.io/</link>
    <atom:link href="http://mattcree.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 13 Sep 2016 03:33:29 +0100</pubDate>
    <lastBuildDate>Tue, 13 Sep 2016 03:33:29 +0100</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>The Upgraded iPod Mini in 2016</title>
        <description>&lt;p&gt;Many years ago, when the mechanical drive was king, hacking the iPod was a popular past-time. I kid; not popular, but among those who can’t live with a piece of hardware they haven’t tinkered with, stripped down and rebuilt, and upgraded beyond its original spec, it was a cheap and easy way to get something worth more than the sum of its parts.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/ipod/4.JPG&quot; alt=&quot;Front&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The iPod Mini was and still is a reasonably good candidate for a makeover. It is the only iPod that can be upgraded without an adapter, seeing as the microdrives which are used in them implement the True IDE spec used by Compact Flash cards, and have the same interface and pinout as CF cards. They’re basically mechanical CF cards.&lt;/p&gt;

&lt;h1 id=&quot;the-upgrades&quot;&gt;The Upgrades&lt;/h1&gt;

&lt;p&gt;The iPod Mini can be upgraded with new hardware and new software; neither of which will let you leave with your warranty intact (not that you’ve got one 12 years later). There were two iterations of the device (1st generation and 2nd generation; identified by ‘2004’ on the back for 1st generation, and ‘2005’ for 2nd) the latter of which improved the battery life, a supposed 20 hours of playtime. The original hardware specs include a 4GB (or 6GB) Microdrive and Apple’s proprietary operating system – both of which I put under the knife.&lt;/p&gt;

&lt;h2 id=&quot;storage-upgrade-sandisk-extreme-pro-128gb-cf&quot;&gt;Storage Upgrade: Sandisk Extreme Pro 128GB CF&lt;/h2&gt;

&lt;p&gt;So I went all out. I only own about 35GB of music, but I really couldn’t help myself – bigger is better when it comes to storage.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/sandisk128gbcf.jpg&quot; alt=&quot;Sandisk 128GB&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are cheaper options than purchasing a 128GB Compact Flash card, which are actually creeping up in price these days probably due to rarity. They include buying a Compact Flash to SDXC adapter and SD Card, or going with a 64GB or below CF card, which have a better price-per-GB.&lt;/p&gt;

&lt;p&gt;I acquired a Sandisk Extreme Pro 128GB 100MB/s CF card. You almost certainly don’t need to buy such a high end CF card as you won’t be able to use its full potential. The bottleneck is the iPod Mini in this case.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/transfer.png&quot; alt=&quot;Speed&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I was transferring a roughly 500MB Windows 95 ISO in the above image, but even with multiple smaller files it seems to hold steady around 4.7MB/s. Transferring my 35GB music collection took about 2-2.5 hours to complete.&lt;/p&gt;

&lt;p&gt;You could probably make do with a budget card whose transfer rate is much lower. Sandisk claim a minimum sustained write speed of 20MB/s with the card I chose, and 100MB/s maximum – both much, much higher than what the Mini is capable of.&lt;/p&gt;

&lt;h3 id=&quot;is-it-worth-it&quot;&gt;Is it worth it?&lt;/h3&gt;

&lt;p&gt;More space means that you can afford to put a substantial amount of music onto these devices. That’s good for your music quantitatively and qualitatively – more on that in the next section. It may be slow, but it’s still adequate for everyday use as a file store on the go – probably not if you’re transferring multiple gigabybtes in one session though!&lt;/p&gt;

&lt;p&gt;Many people have covered the process of tearing down the Mini, and all-in-all it’s a &lt;a href=&quot;http://www.rockbox.org/wiki/MiniCF&quot;&gt;fairly easy process&lt;/a&gt; requiring very little technical know-how. The SD card with SDXC to CF adapter method I mentioned originally is probably the cheapesy way to upgrade these devices now – just make sure you get the SDXC (the ‘XC’ part is important) adapter if you’re going to use a 64GB or greater card. People have put 256GB cards into these things! Imagine how long it would take to fill it!&lt;/p&gt;

&lt;h2 id=&quot;software-upgrade-rockbox-313&quot;&gt;Software Upgrade: RockBox 3.13&lt;/h2&gt;

&lt;p&gt;This one is possible even without opening up the iPod. &lt;a href=&quot;http://www.rockbox.org&quot;&gt;Rockbox&lt;/a&gt; is a free, open source replacement for the operating software found on a number of consumer music players. Not all generations of iPod are supported, but most of those containing a mechanical drive are. For a full compatibility list, check &lt;a href=&quot;http://www.rockbox.org/wiki/TargetStatus&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/ipod/3.JPG&quot; alt=&quot;Info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My first iPod was the pre-clickwheel 3rd generation 15GB model. This was my first exposure to iPodLinux, a now defunct Linux software solution for these devices. To a great extent it could do what RockBox can do – replace the original software features of the iPod, run plugins and other software (even Doom – a game not exactly &lt;em&gt;perfectly&lt;/em&gt; suited to a clickwheel for control), and allow the user to dump files onto the iPod without iTunes – the biggest advantage!&lt;/p&gt;

&lt;p&gt;Now Rockbox is largely defunct as well with the last stable update having taken place during March 2013 – obviously the market for dedicated portable music hardware is dwindling with the ubiquity of smartphones and tablets and all other swiss-army-knife-esque devices that we surround ourselves with, but I digress. It’s as mature as it needs to be for everyday use as a music player, so it’s not worth worrying about.&lt;/p&gt;

&lt;p&gt;It’s an almost one-click installation process on Windows (installers are also available for Mac OS X and Linux) and it still allows you to use your iPod with the original firmware by holding &lt;em&gt;Menu&lt;/em&gt; on startup&lt;/p&gt;

&lt;h2 id=&quot;is-it-worth-it-1&quot;&gt;Is it worth it?&lt;/h2&gt;

&lt;p&gt;The immediate advantages are that you can play exotic file formats without reconversion (full list &lt;a href=&quot;http://www.rockbox.org/wiki/SoundCodecs&quot;&gt;here&lt;/a&gt;). You can just plug your device into the computer, drag and drop the files, disconnect, do a database rebuild on the device, and play your files! Not having to install the bloatware marketplace that is iTunes makes this a must-have upgrade.&lt;/p&gt;

&lt;p&gt;There is anecdotal evidence that battery life is also improved over the stock firmware (I have yet to confirm these whispers).&lt;/p&gt;

&lt;p&gt;One of my favourite features is the high resolution volume control – 100 levels of volume are available, making it easy to choose your sweet spot. It also represents that value (in the default theme at lest) in decibels.&lt;/p&gt;

&lt;h1 id=&quot;cost-worth-it&quot;&gt;Cost: Worth it?&lt;/h1&gt;

&lt;p&gt;Short answer: yes! Though a gentlemen ordinarily never tells, I will say that this entire setup cost me £36. I had my eye on the Sandisk Sansa devices, and found they rarely sell for less than about £25 even second hand, then add the price of a MicroSD, and it makes it around £40+ to get something comparable. Yes, the Sansa is smaller, but I prefer the form factor of the Mini and the clickwheel was and is an ingenius solution for navigating lists such as those generally found in music players.&lt;/p&gt;

&lt;p&gt;The only concern I have now is that I may want to replace the battery with a higher capacity unit. I have yet to fully field test it. Wish me luck.&lt;/p&gt;

</description>
        <pubDate>Tue, 13 Sep 2016 00:00:00 +0100</pubDate>
        <link>http://mattcree.github.io/technology/2016/09/13/ipod-mini-in-2016.html</link>
        <guid isPermaLink="true">http://mattcree.github.io/technology/2016/09/13/ipod-mini-in-2016.html</guid>
        
        <category>ipod</category>
        
        <category>apple</category>
        
        <category>upgrade</category>
        
        <category>hack</category>
        
        
        <category>technology</category>
        
      </item>
    
      <item>
        <title>My 'special' ThinkPad T500</title>
        <description>&lt;p&gt;I’m a big fan of ThinkPads. Over the years I’ve owned quite a variety. Starting with a T61p  then an X60, X61, T60 4:3, X200, X230, and the subject of this post – the T500.&lt;/p&gt;

&lt;p&gt;My T500 isn’t the newest or most powerful, but it’s my most unique ThinkPad. Not quite a ‘FrankenPad’ (a 4:3 T60 with a T61 motherboard, modded BIOS, and a Penryn CPU) but it draws parts from a few different places, and has been through the wars.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/front.jpg&quot; alt=&quot;Front&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Windows 10 Pro 64-bit&lt;/p&gt;

  &lt;p&gt;Intel Core 2 Duo E8335 @ 2.93GHz&lt;/p&gt;

  &lt;p&gt;8.00GB Dual-Channel DDR3 1066MT/s (7-7-7-20)&lt;/p&gt;

  &lt;p&gt;Generic PnP Monitor (1920x1200@60Hz)&lt;/p&gt;

  &lt;p&gt;Intel GMA4500 MHD&lt;/p&gt;

  &lt;p&gt;ATI Radeon HD3650 256MB VRAM&lt;/p&gt;

  &lt;p&gt;111GB OCZ-VERTEX3 (SSD)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I picked it up from a seller specialising in ex-corporate computers. It was marked Grade C, so my hopes were not high, but the price was right.&lt;/p&gt;

&lt;p&gt;When it arrived, it seemed to be in great condition, with only a slightly conspicuous chunk missing from the rear left corner of the lid. It was overheating quite badly, but after a re-application of thermal paste and a thorough removal of dust, everything was running smoothly. Much later I noticed that the back of the laptop was slightly bowed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/corner.jpg&quot; alt=&quot;Rear&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The T500’s were known for being weak at this corner, with only a sliver of metal running down the rear left side, just over the fan exhaust. I imagine it was dropped onto this corner, leaving the whole thing a bit crooked. The outside of this computer isn’t really the interesting part, though.&lt;/p&gt;

&lt;h2 id=&quot;upgrades&quot;&gt;Upgrades&lt;/h2&gt;

&lt;p&gt;I was on the cusp of selling this laptop on when I decided it would be worth more to me as a machine to play around with – the cosmetic issues weren’t big enough to matter to me, but they would devalue the machine. I previously had the notion I might want to build myself a FrankenPad, but unfortunately T60s and T61s are starting to creep up in price. That, and the FlexView 1600x1200 screens aren’t cheap either, which is what I’d want to use ideally. Since I’m not a 4:3 zealot, it seemed a bit pointless really.&lt;/p&gt;

&lt;h3 id=&quot;storage&quot;&gt;Storage&lt;/h3&gt;

&lt;p&gt;To start with I stuck an SSD into it, because… why not? SSDs make everything better! There are some mysteries regarding the SATA standard supported. The ICH9 is supposed to support full SATA-II 3.0Gbps, but apparently Lenovo may have limited this with a bandwidth cap – honestly, I never bothered to check because I was more interested in improving read response times. Fast enough that you probably won’t care unless you’re doing some serious writing and reading to disk. I&lt;/p&gt;

&lt;h3 id=&quot;processor&quot;&gt;Processor&lt;/h3&gt;

&lt;p&gt;Next, I checked to see which CPUs were compatible with it. It takes Socket P478 CPUs and the fastest one listed that this machine will accept is the T9900. Unofficially, it can take a Core 2 Duo Extreme X9000. Due to BIOS restrictions, it won’t accept any Core 2 Quads.&lt;/p&gt;

&lt;p&gt;The T9400 that was originally in the computer was no slouch, and I was dubious about the value of upgrading it. Anything above a T9700 started to cost as much as an entire T500, and with indications that the performance improvement would only be in the region of 10-15%, not worth it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/front-left.jpg&quot; alt=&quot;Front left&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So, whilst browsing eBay for Socket P CPUs I found a few with odd model numbers I hadn’t seen before, of the format &lt;em&gt;e8x35&lt;/em&gt;. It turns that these were Intel Core 2 Duos manufactured especially for Apple iMacs, and were never available for retail purchase. A full list of these is available &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_Intel_Core_2_microprocessors#.22Penryn.22_.28Apple_iMac_specific.2C_45_nm.29&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Stranger still, was that there were multiple revisions of each, with different clock speeds and TDP requirements (heat output). After doing a little bit of homework, I discovered that these were perfectly pin-compatible with a standard Socket P, non-Apple computer, and the only real concern was the TDP. The T8x00-9x00 series are all 35W TDP CPUs, but the best e8x35 processor, the E8435 SLGEA(E0), is 45W, and the earlier revision of the same CPU is 55W.&lt;/p&gt;

&lt;p&gt;The T500 CPU cooler is regarded to be one of the best available from that era of laptops, and is compatible the T60s and T61s. Many people who are building a FrankenPad, try to pick up a T500 Heat Sink Fan (HSF) to deal with the added thermal load of the higher-than-original-spec CPUs they generally use. With this in mind, I decided it wasn’t going to be a big deal what CPU I ended up settling on – in any case they were much, much cheaper than the T9700-and-up CPUs on eBay, probably due to relative obscurity.&lt;/p&gt;

&lt;p&gt;It was settled by price. You can pick up an E8335 SLAQB(C0) (careful not to get the SLGED (E0) revision, or you might as well get a T9500!) for about £10. I ended up selling the T9400 for more than that, which is a nice demonstration on the economy of buying these more obscure iMac Core 2’s. If I see one cheap enough, I’ll pick up an E8435 and report back.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/top.jpg&quot; alt=&quot;Top&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;lcd-panel&quot;&gt;LCD Panel&lt;/h2&gt;

&lt;p&gt;The standard LCD with the T500 is a 1680x1050 16:10 panel from a handful of different manufacturers. In my experience, these LCDs are generally dull and mostly the backlights have seen better days. They are generally dim and yellow-hued. My T500’s wasn’t bad, but it wasn’t great either. To make this a computer I’d enjoy using from day to day, this would be a necessary upgrade.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://panelook.com&quot;&gt;Panelook.com&lt;/a&gt; is an invaluable resource for finding compatible LCDs if all you have to go on is the connection technology (LVDS in this case), size, aspect ratio, and so on. I narrowed my selection down to &lt;a href=&quot;http://www.panelook.com/sizmodlist.php?st=&amp;amp;pl=&amp;amp;sizes[]=15.4&amp;amp;resolution_pixels=19201200&amp;amp;lamp_type=CCFL&amp;amp;signal_type_category=LVDS&amp;amp;application=NBPC&quot;&gt;this list&lt;/a&gt; and through a process of eBay searching each model number to determine the best priced items, I settled on the &lt;a href=&quot;http://www.ebay.co.uk/itm/371476766152&quot;&gt;Samsung LTN154CT02-002&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The only discrepancy with this panel is that required an inverter board that could drive two backlights – it has two backlight plugs. There exists no ThinkPad inverter which can drive two backlights, so my only choice was to try it on one, see how it worked, and if it worked decide whether it was bright enough.&lt;/p&gt;

&lt;p&gt;Lo and behold it worked perfectly! Whether it could be brighter is immaterial, as it seems perfectly bright, with no bizarre side-effects or uneven backlighting.&lt;/p&gt;

&lt;p&gt;1200p is great on a screen this size, and still manages to feel very spacious even in 2016 when resolutions double that are routinely available on laptops. My X230 by comparison, at 1366x768, feels extremely cramped. Even a 12.5” display would benefit from 1600x900 surely? That’s a story for another day though – Lenovo choosing to use an LVDS 12.5” 16:9 panel when all other 12.5” panels are eDP, so no possible upgrade path exists unfortunately.&lt;/p&gt;

&lt;h2 id=&quot;other-upgrades&quot;&gt;Other upgrades&lt;/h2&gt;

&lt;p&gt;The keyboard I use on the T500 is from an IBM era T60. It’s noticeably heavier, thicker feeling, and much less flex prone. It’s probably the nicest keyboard on any machine I own. I use the ‘golf tee’ TrackPoint.&lt;/p&gt;

&lt;p&gt;I installed 8GB of RAM immediately upon arrival. Whilst Windows 8-10 are both quite comfortable on 2-4GB of RAM, nothing makes the experience more smooth than just going all out. 8GB even for light users just means you’ll never hit that bottleneck again!&lt;/p&gt;

&lt;p&gt;I had some plans to put an mSATA drive in one of the spare mini PCI-e slots, but unfortunately the T520/420 and X220 machines were the first to support mSATA in the ThinkPad lineup. While there is no hardware support for mSATA, these machines could be configured with an Intel Turbo Cache drive between 2-4GB. That’s about it in terms of adding any memory of another kind (apart from another SATA drive in the UltraBay).&lt;/p&gt;

&lt;p&gt;The only other substantial upgrade available for a T500 is to swap out the motherboard for a W500 board. The only reason to do this is if you want to se the ATI Mobility FireGL V5700 with 512MB VRAM. Apart from the added RAM on this video adapter, there is no real advantage to using it – performance wise it will probably be a sidegrade, or barely worth noticing. I personally use the onboard graphics exclusively due to the non-existent support for switchable from this era from either Intel, AMD, or Lenovo (and improved battery life, less heat output). That being said, Lenovo is the one ultimately responsible for supporting their switchable graphics solution, and you can hardly expect them to bother with a machine so far into the sunset even a flat-earther can’t see it.&lt;/p&gt;

&lt;p&gt;So there it is! I still use it every day, probably more than my X230, despite it outperforming the T500 in every way. It’s sort of like a comfy chair, or a vintage car. They have a class all of their own; it’s not JUST about performance!&lt;/p&gt;

</description>
        <pubDate>Sat, 10 Sep 2016 00:00:00 +0100</pubDate>
        <link>http://mattcree.github.io/technology/2016/09/10/my-special-thinkpad-t500.html</link>
        <guid isPermaLink="true">http://mattcree.github.io/technology/2016/09/10/my-special-thinkpad-t500.html</guid>
        
        <category>thinkpad</category>
        
        <category>lenovo</category>
        
        <category>t500</category>
        
        
        <category>technology</category>
        
      </item>
    
      <item>
        <title>Starting out with Jekyll</title>
        <description>&lt;p&gt;I’m Matt, and I decided I’d start this blog to discuss the different topics I’m learning about in the area of coding, Maths, technology, and anything else I think is interesting or relevant.&lt;/p&gt;

&lt;p&gt;In this post I’m going to say a bit about what I’ve learned about &lt;a href=&quot;https://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; in the process of setting up this blog. I won’t be running through all the steps to get a Jekyll site up and running; there are plenty of people who have done that. Instead, I just want to cover what I think are the fundamental principles of Jekyll.&lt;/p&gt;

&lt;h2 id=&quot;what-is-jekyll&quot;&gt;What is Jekyll?&lt;/h2&gt;

&lt;p&gt;Jekyll is a tool for creating simple, static sites. What this means is that it does not use a database, or any real-time, dynamic code when in use. All of the site’s layout and directories are generated by Jekyll whenever the ‘bundle exec jekyll build’ command is run. You can then upload the site to your host. This makes it fast and able to run on the simplest web hosts (I am hosting it on GitHub pages, as you may have noticed, which is free).&lt;/p&gt;

&lt;h2 id=&quot;why-use-it&quot;&gt;Why use it?&lt;/h2&gt;

&lt;p&gt;My experience of static sites, has been that they required a fairly hands-on approach to maintaining the folder structure, and manually editing multiple files whenever changes are made. As mentioned before, Jekyll does all of this for you. All I have to focus on as a blogger is writing posts, saving them as &lt;em&gt;.markdown&lt;/em&gt; files, and placing them into the &lt;em&gt;_posts&lt;/em&gt; directory. Conversely, because it is so simple, it dodges need to set up the backend of a traditional MVC blog app. The approach by WordPress et al focuses on the entire blog as a piece of software for authoring and publishing posts within the browser. For me, it’s a case of WordPress being a sledgehammer to crack a nut. They describe Jekyll as being ‘blog aware’; it has built-in support for blogging, and the basic site scaffold which is initially generated is a blog page.&lt;/p&gt;

&lt;h2 id=&quot;markdown&quot;&gt;Markdown&lt;/h2&gt;

&lt;p&gt;As mentioned before, Jekyll uses &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;, a text to HTML conversion tool.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/markdown.png&quot; alt=&quot;Markdown in action&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The essence of Markdown is readability and minimal use of symbols for formatting – Jekyll parses the markdown files each time the site is built. It’s a great addition to Jekyll’s functionality which allows rich text formatting without the hassle of HTML tags. There’s a basic guide to Markdown &lt;a href=&quot;https://daringfireball.net/projects/markdown/basics&quot;&gt;here&lt;/a&gt;. The key thing to note from the screenshot above, is that the only directory which is updated is &lt;em&gt;_posts&lt;/em&gt;. Whenever a file with the naming format &lt;em&gt;year-month-day-title.markdown&lt;/em&gt; is dropped in there, it will rebuild file structure and produce the &lt;em&gt;category/year/month/day/title.html&lt;/em&gt; structure.&lt;/p&gt;

&lt;h2 id=&quot;liquid&quot;&gt;Liquid&lt;/h2&gt;

&lt;p&gt;As Jekyll is built using ruby, it allows the use of &lt;a href=&quot;https://help.shopify.com/themes/liquid/&quot;&gt;Liquid&lt;/a&gt; tags. It allows you to use ruby code inline with your HTML or, in this case, Markdown files.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bar&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;would display&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;bar&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;With the basic scaffold, the front page contains a for loop which iterates through all the posts which, upon the site rebuild, will render a new &lt;em&gt;index.html&lt;/em&gt; with a list of posts.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;{% for post in site.posts %}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post-link&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ post.url | prepend: site.baseurl }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      {{ post.title | escape }}
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;post-meta&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    {{ post.date | date: &quot;%b %-d, %Y&quot; }}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
    {{ post.excerpt }}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
{% endfor %}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It basically builds the new post list on the front page, taking the information contained in each post in turn. On a dynamic site with a database, such as perhaps a Ruby on Rails blog, this would happen in in real time.&lt;/p&gt;

&lt;h2 id=&quot;yaml-front-matter&quot;&gt;YAML front matter&lt;/h2&gt;

&lt;p&gt;YAML front matter allows you to create variables attached to a page. For example, the following block is at the top of the Markdown file I am currently editing:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;layout: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;title:  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Starting out with Jekyll&quot;&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;date:   &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;09&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;07&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;categories: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jekyll&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;---&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;These variables are predefined in Jekyll, but I could add other variables myself, such as &lt;em&gt;user: Matt&lt;/em&gt;, which I could then reference elsewhere as &lt;em&gt;{{ post.user }}&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;in-closing&quot;&gt;In closing&lt;/h2&gt;

&lt;p&gt;I’ll probably discuss Jekyll a bit more as and when I learn more! So far I’m very pleased with how simple and concise it seems. Having had some experience using AngularJS to build a project blog, and a bit of experience using Rails for a blog, there’s no doubt in my mind that Jekyll is simpler and perfectly suited to the task.&lt;/p&gt;

&lt;p&gt;Until next time.&lt;/p&gt;

</description>
        <pubDate>Thu, 08 Sep 2016 00:00:00 +0100</pubDate>
        <link>http://mattcree.github.io/programming/2016/09/08/starting-out-with-jekyll.html</link>
        <guid isPermaLink="true">http://mattcree.github.io/programming/2016/09/08/starting-out-with-jekyll.html</guid>
        
        <category>jekyll</category>
        
        <category>ruby</category>
        
        
        <category>programming</category>
        
      </item>
    
  </channel>
</rss>
